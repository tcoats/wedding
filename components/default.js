// Generated by CoffeeScript 1.9.1
var component, dom, hub, inject, ql, ref, rsvp, widget;

ref = require('odojs'), component = ref.component, dom = ref.dom, widget = ref.widget;

inject = require('injectinto');

ql = require('odoql/ql');

hub = require('odo-hub');

rsvp = component({
  render: function(state, params) {
    var checkboxattrs, contents, fn, i, index, items, len, name, nameinput, ref1;
    nameinput = function(name, cb) {
      return dom('div', [
        dom('input', {
          onkeyup: function(e) {
            if (e.keyCode === 13) {
              return cb(e.target.value);
            }
          },
          onblur: function(e) {
            return cb(e.target.value);
          },
          attributes: {
            type: 'text',
            autocomplete: 'off',
            autocorrect: 'off',
            autocapitalize: 'off',
            value: name
          }
        })
      ]);
    };
    items = [];
    ref1 = state.attending;
    fn = function(index) {
      return items.push(nameinput(name, function(newname) {
        return hub.emit("{eventtitle} attendee {index} is {name}", {
          eventtitle: params.eventtitle,
          index: index,
          name: newname
        });
      }));
    };
    for (index = i = 0, len = ref1.length; i < len; index = ++i) {
      name = ref1[index];
      fn(index);
    }
    checkboxattrs = {
      type: 'checkbox'
    };
    if (state.going) {
      checkboxattrs.checked = 'checked';
    }
    contents = [
      dom('label', [
        dom('span', "RSVP to the " + params.eventtitle), dom('input', {
          attributes: checkboxattrs,
          onchange: function(e) {
            return hub.emit('{eventtitle} RSVP {attending}', {
              eventtitle: params.eventtitle,
              attending: e.target.checked
            });
          }
        }), dom('span')
      ])
    ];
    if (state.going) {
      contents.push(dom('div', [dom('h4', 'Who is attending?'), dom('div', items)]));
    }
    return dom('div', contents);
  }
});

inject.bind('page:default', component({
  query: function(params) {
    return {
      invite: ql.query('invites', 'asdf')
    };
  },
  render: function(state, params) {
    var titileattr;
    titileattr = {
      attributes: {
        "class": 'title',
        src: '/title.png'
      }
    };
    return dom('div', {
      attributes: {
        "class": 'wrapper'
      }
    }, [
      dom('h1', state.invite.name), dom('img', titileattr), rsvp(state.invite['Pre Wedding Celebrations'], {
        eventtitle: 'Pre Wedding Celebrations'
      }), rsvp(state.invite['Wedding Ceremony'], {
        eventtitle: 'Wedding Ceremony'
      }), rsvp(state.invite['Wedding Reception'], {
        eventtitle: 'Wedding Reception'
      })
    ]);
  }
}));
