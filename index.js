// Generated by CoffeeScript 1.9.1
var CSON, app, async, compression, express, oneDay, path, port, ql, stores;

express = require('express');

compression = require('compression');

path = require('path');

ql = require('odoql/ql');

async = require('odo-async');

CSON = require('cson');

stores = {
  invites: function(query, callback) {
    var e, key, loadinvite, result, tasks, value;
    try {
      result = {};
      tasks = [];
      loadinvite = function(key, value) {
        return function(cb) {
          var file, filename;
          filename = value.__params + ".cson";
          file = path.join(__dirname, 'data', filename);
          return CSON.load(file, function(err, results) {
            if (err != null) {
              console.log(err);
              return cb();
            }
            console.log(filename);
            console.log(results);
            result[key] = results;
            return cb();
          });
        };
      };
      for (key in query) {
        value = query[key];
        tasks.push(loadinvite(key, value));
      }
      async.parallel(tasks, function() {
        return callback(null, result);
      });
    } catch (_error) {
      e = _error;
      console.log(e);
      callback(e);
    }
    return function() {};
  }
};

app = express();

app.use(compression());

oneDay = 1000 * 60 * 60 * 24;

app.use(express["static"](__dirname, {
  maxAge: oneDay
}));

app.get('/query', function(req, res) {
  var query;
  query = JSON.parse(req.query.q);
  return ql.exec(query, stores, function(err, results) {
    if (err != null) {
      res.status(400);
      res.json(err);
      return;
    }
    return res.json(results);
  });
});

app.get('/*', function(req, res) {
  console.log(req.url);
  return res.sendFile(path.join(__dirname, 'index.html'));
});

port = 8085;

app.listen(port);

console.log("Wedding is listening on port " + port + "...");
