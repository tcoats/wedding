// Generated by CoffeeScript 1.9.1

/*
  Register things to do when various events fire
 */
var hub, request, scene, xhr;

hub = require('odo-hub');

scene = require('./scene');

request = require('superagent');

xhr = require('xhr');

hub.all(function(e, description, p, cb) {
  var timings;
  if (e === 'queries starting') {
    console.log("? " + p.description);
  } else if (e === 'queries completed') {
    timings = Object.keys(p).map(function(prop) {
      return "  " + prop + " in " + p[prop] + "ms";
    }).join('\n');
    console.log("âˆš completed\n" + timings);
  } else {
    console.log("+ " + description);
  }
  return cb();
});

hub.every('{eventid} RSVP {attending}', function(p, cb) {
  var delta, transaction;
  delta = {
    invite: {}
  };
  delta.invite[p.eventid] = {
    going: p.attending
  };
  transaction = scene.layer(delta);
  scene.update();
  return cb();
});

hub.every('{eventid} attendee {index} is {name}', function(p, cb) {
  var attending, delta, transaction;
  attending = scene.state().invite[p.eventid].attending.slice(0);
  attending[p.index] = name;
  delta = {
    invite: {}
  };
  delta.invite[p.eventid] = {
    attending: attending
  };
  transaction = scene.layer(delta);
  scene.update();
  return cb();
});

hub.every('navigate to the default page', function(p, cb) {
  scene.update({
    page: {
      name: 'default',
      code: p.code
    }
  });
  return cb();
});

hub.every('navigate to the front page', function(p, cb) {
  scene.update({
    page: {
      name: 'front'
    }
  });
  return cb();
});

hub.every('navigation error, {pathname} not found', function(p, cb) {
  scene.update({
    page: {
      name: 'error',
      message: "Sorry, the \"" + p.pathname + "\" page was not found."
    }
  });
  return cb();
});

hub.every('event error, {code} not found', function(p, cb) {
  scene.update({
    page: {
      name: 'error',
      message: "Sorry, the event code \"" + p.code + "\" was not found."
    }
  });
  return cb();
});

hub.every('event error, {code} submit failed', function(p, cb) {
  scene.update({
    page: {
      name: 'error',
      message: 'Sorry, something went wrong. Refresh to try again?'
    }
  });
  return cb();
});

hub.every('event submit {code} success', function(p, cb) {
  scene.update({
    success: true
  });
  return cb();
});

hub.every('event code {code} submitted', function(p, cb) {
  require('page').stop();
  return request.post('/submit').query({
    code: p.code
  }).send(p.data).end(function(err, res) {
    cb();
    if ((err != null) || !res.ok) {
      console.error(err);
      hub.emit('event error, {code} submit failed', p);
      return;
    }
    return hub.emit('event submit {code} success', p);
  });
});
